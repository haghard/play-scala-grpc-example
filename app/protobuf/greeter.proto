syntax = "proto3";

import "scalapb/scalapb.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";


package example.helloworld.service;

option java_multiple_files = true;

//option java_package takes precedence over package
option java_package = "example.helloworld.service";

option (scalapb.options) = {
  no_default_values_in_constructor: false
};

service GreeterService {

  //post
  rpc sayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/sayHello"
      body: "*"
   };
  }

  //post
  rpc sayHello2 (HelloRequest2) returns (HelloReply2) {
    option (google.api.http) = {
      get: "/v1/{name=messages/*}"
      //post: "/v1/sayHello2"
      //body: "*"
    };
  }

  rpc sayHello3(UpdateMessageRequest) returns (Message) {
    option (google.api.http) = {
      patch: "/v1/messages/{message_id}"
      body: "message"
    };
  }

  //If you want to create an endpoint that takes no parameters or produces no response, it might be tempting to use the Empty type as defined by Google in their empty.proto.
  //rpc healthCheck(Empty) returns (HealthCheckStatus) {}
}

message HelloRequest {
  string name = 1;
  int32 age = 2;
}

message HelloReply {
  string message = 1;
  google.protobuf.Timestamp when = 2;
}

message HelloRequest2 {
  string name = 1;
}

message HelloReply2 {
  string message = 1;
}

message BigDecimalPB {
  option (scalapb.message).type = "scala.math.BigDecimal";
  uint64 unscaledValue = 1;
  int32 scale = 2;
}

message Empty{}


message HealthCheckStatus {
  google.protobuf.BoolValue status = 1;
}

message UpdateMessageRequest {
  string message_id = 1; // mapped to the URL
  Message message = 2;   // mapped to the body
}

message Message {
  string message_id = 1;
  string text = 2;
}